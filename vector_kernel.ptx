//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29745058
// Cuda compilation tools, release 11.3, V11.3.58
// Based on NVVM 7.0.1
//

.version 7.3
.target sm_52
.address_size 64

	// .globl	_Z9vector_fniPiS_

.visible .entry _Z9vector_fniPiS_(
	.param .u32 _Z9vector_fniPiS__param_0,
	.param .u64 _Z9vector_fniPiS__param_1,
	.param .u64 _Z9vector_fniPiS__param_2
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<55>;
	.reg .b64 	%rd<17>;


	ld.param.u32 	%r20, [_Z9vector_fniPiS__param_0];
	ld.param.u64 	%rd7, [_Z9vector_fniPiS__param_1];
	ld.param.u64 	%rd6, [_Z9vector_fniPiS__param_2];
	cvta.to.global.u64 	%rd1, %rd7;
	mov.u32 	%r22, %ntid.x;
	mov.u32 	%r23, %ctaid.x;
	mov.u32 	%r24, %tid.x;
	mad.lo.s32 	%r50, %r23, %r22, %r24;
	mov.u32 	%r25, %nctaid.x;
	mul.lo.s32 	%r2, %r22, %r25;
	setp.ge.s32 	%p1, %r50, %r20;
	mov.u32 	%r54, 0;
	@%p1 bra 	$L__BB0_7;

	add.s32 	%r28, %r2, %r20;
	add.s32 	%r29, %r50, %r2;
	not.b32 	%r30, %r29;
	add.s32 	%r31, %r28, %r30;
	div.u32 	%r32, %r31, %r2;
	add.s32 	%r3, %r32, 1;
	and.b32  	%r53, %r3, 3;
	setp.lt.u32 	%p2, %r32, 3;
	mov.u32 	%r54, 0;
	@%p2 bra 	$L__BB0_4;

	sub.s32 	%r48, %r3, %r53;
	mov.u32 	%r54, 0;
	mul.wide.s32 	%rd10, %r2, 4;

$L__BB0_3:
	mul.wide.s32 	%rd8, %r50, 4;
	add.s64 	%rd9, %rd1, %rd8;
	ld.global.u32 	%r34, [%rd9];
	add.s32 	%r35, %r34, %r54;
	add.s64 	%rd11, %rd9, %rd10;
	ld.global.u32 	%r36, [%rd11];
	add.s32 	%r37, %r36, %r35;
	add.s32 	%r38, %r50, %r2;
	add.s32 	%r39, %r38, %r2;
	add.s64 	%rd12, %rd11, %rd10;
	ld.global.u32 	%r40, [%rd12];
	add.s32 	%r41, %r40, %r37;
	add.s32 	%r42, %r39, %r2;
	add.s64 	%rd13, %rd12, %rd10;
	ld.global.u32 	%r43, [%rd13];
	add.s32 	%r54, %r43, %r41;
	add.s32 	%r50, %r42, %r2;
	add.s32 	%r48, %r48, -4;
	setp.ne.s32 	%p3, %r48, 0;
	@%p3 bra 	$L__BB0_3;

$L__BB0_4:
	setp.eq.s32 	%p4, %r53, 0;
	@%p4 bra 	$L__BB0_7;

	mul.wide.s32 	%rd14, %r50, 4;
	add.s64 	%rd16, %rd1, %rd14;
	mul.wide.s32 	%rd3, %r2, 4;

$L__BB0_6:
	.pragma "nounroll";
	ld.global.u32 	%r44, [%rd16];
	add.s32 	%r54, %r44, %r54;
	add.s64 	%rd16, %rd16, %rd3;
	add.s32 	%r53, %r53, -1;
	setp.ne.s32 	%p5, %r53, 0;
	@%p5 bra 	$L__BB0_6;

$L__BB0_7:
	cvta.to.global.u64 	%rd15, %rd6;
	atom.global.add.u32 	%r45, [%rd15], %r54;
	ret;

}
	// .globl	_Z13vector_fn_seqiPiS_
.visible .entry _Z13vector_fn_seqiPiS_(
	.param .u32 _Z13vector_fn_seqiPiS__param_0,
	.param .u64 _Z13vector_fn_seqiPiS__param_1,
	.param .u64 _Z13vector_fn_seqiPiS__param_2
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<61>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r23, [_Z13vector_fn_seqiPiS__param_0];
	ld.param.u64 	%rd6, [_Z13vector_fn_seqiPiS__param_1];
	ld.param.u64 	%rd5, [_Z13vector_fn_seqiPiS__param_2];
	cvta.to.global.u64 	%rd1, %rd6;
	mov.u32 	%r24, %nctaid.x;
	add.s32 	%r25, %r24, %r23;
	add.s32 	%r26, %r25, -1;
	div.u32 	%r27, %r26, %r24;
	mov.u32 	%r28, %ctaid.x;
	mul.lo.s32 	%r1, %r27, %r28;
	mov.u32 	%r29, %ntid.x;
	add.s32 	%r30, %r29, %r27;
	add.s32 	%r31, %r30, -1;
	div.u32 	%r2, %r31, %r29;
	mov.u32 	%r32, %tid.x;
	mul.lo.s32 	%r3, %r2, %r32;
	add.s32 	%r56, %r3, %r1;
	setp.lt.s32 	%p1, %r2, 1;
	mov.u32 	%r60, 0;
	@%p1 bra 	$L__BB1_7;

	add.s32 	%r35, %r56, 1;
	add.s32 	%r36, %r56, %r2;
	max.s32 	%r37, %r35, %r36;
	sub.s32 	%r38, %r37, %r1;
	sub.s32 	%r5, %r38, %r3;
	not.b32 	%r39, %r1;
	add.s32 	%r40, %r37, %r39;
	sub.s32 	%r41, %r40, %r3;
	and.b32  	%r59, %r5, 3;
	setp.lt.u32 	%p2, %r41, 3;
	mov.u32 	%r60, 0;
	@%p2 bra 	$L__BB1_4;

	sub.s32 	%r54, %r5, %r59;
	mov.u32 	%r60, 0;

$L__BB1_3:
	mul.wide.s32 	%rd7, %r56, 4;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.u32 	%r43, [%rd8];
	add.s32 	%r44, %r43, %r60;
	ld.global.u32 	%r45, [%rd8+4];
	add.s32 	%r46, %r45, %r44;
	ld.global.u32 	%r47, [%rd8+8];
	add.s32 	%r48, %r47, %r46;
	ld.global.u32 	%r49, [%rd8+12];
	add.s32 	%r60, %r49, %r48;
	add.s32 	%r56, %r56, 4;
	add.s32 	%r54, %r54, -4;
	setp.ne.s32 	%p3, %r54, 0;
	@%p3 bra 	$L__BB1_3;

$L__BB1_4:
	setp.eq.s32 	%p4, %r59, 0;
	@%p4 bra 	$L__BB1_7;

	mul.wide.s32 	%rd9, %r56, 4;
	add.s64 	%rd11, %rd1, %rd9;

$L__BB1_6:
	.pragma "nounroll";
	ld.global.u32 	%r50, [%rd11];
	add.s32 	%r60, %r50, %r60;
	add.s64 	%rd11, %rd11, 4;
	add.s32 	%r59, %r59, -1;
	setp.ne.s32 	%p5, %r59, 0;
	@%p5 bra 	$L__BB1_6;

$L__BB1_7:
	cvta.to.global.u64 	%rd10, %rd5;
	atom.global.add.u32 	%r51, [%rd10], %r60;
	ret;

}

